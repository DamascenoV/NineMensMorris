<%= if @game_full do %>
  <p class="text-red-500 text-2xl mb-4">Game is full. Please try again later.</p>
<% else %>
  <%= if @awaiting_player do %>
    <p class="text-blue-500 text-2xl mb-4">
      You are player {@player}. Waiting for another player to join...
    </p>
  <% else %>
    <div class="game-status">
      <%= if @can_capture do %>
        <div class="removal-prompt bg-red-100 p-4 rounded-lg mb-4">
          <p class="text-red-500 text-sm">
            Select opponent's piece to remove
          </p>
        </div>
      <% else %>
        <%= if @current_player == @player do %>
          <p class="text-green-500 text-2xl mb-4">
            Your turn ({@player}) -
            <%= case @phase do %>
              <% :placement -> %>
                Placement Phase
              <% :move -> %>
                Move Phase
              <% :flying -> %>
                Flying Phase
            <% end %>
          </p>
          <%= if @selected_piece do %>
            <p class="text-blue-500 text-lg">
              Selected piece: {@selected_piece}<br />
              <%= if @phase == :flying do %>
                Click any empty position to move
              <% else %>
                Click adjacent empty position to move
              <% end %>
            </p>
          <% end %>
        <% else %>
          <p class="text-yellow-500 text-2xl mb-4">
            Waiting for opponent's turn...
          </p>
        <% end %>
      <% end %>
    </div>

    <div class="captures">
      <div class="capture-counter">
        <%= for _ <- 1..@captures.black, @captures.black > 0 do %>
          <span class="white-piece"></span>
        <% end %>
      </div>
      <div class="capture-counter">
        <%= for _ <- 1..@captures.white, @captures.white > 0 do %>
          <span class="black-piece"></span>
        <% end %>
      </div>
    </div>

    <div class="game-container rounded-xl bg-gray-200 border-4 border-solid border-gray-900">
      <svg viewBox="0 0 300 300" width="100%" height="100%">
        <rect x="50" y="50" width="200" height="200" fill="none" stroke="black" stroke-width="2" />
        <rect x="87" y="87" width="125" height="125" fill="none" stroke="black" stroke-width="2" />
        <rect x="125" y="125" width="50" height="50" fill="none" stroke="black" stroke-width="2" />
        <line x1="150" y1="50" x2="150" y2="125" stroke="black" stroke-width="2" />
        <line x1="150" y1="175" x2="150" y2="250" stroke="black" stroke-width="2" />
        <line x1="50" y1="150" x2="125" y2="150" stroke="black" stroke-width="2" />
        <line x1="175" y1="150" x2="250" y2="150" stroke="black" stroke-width="2" />
        <%= for {x, y} <- @board_coordinates do %>
          <% position = BoardCoordinates.get_position(x, y) %>
          <circle
            cx={x}
            cy={y}
            r="5"
            fill="gray"
            phx-click={
              cond do
                @can_capture ->
                  "remove_piece"

                @selected_piece && is_nil(@board.positions[position]) &&
                    (@phase == :flying or
                       BoardCoordinates.adjacent_positions?(
                         @selected_piece,
                         position
                       )) ->
                  "move_piece"

                true ->
                  "place_piece"
              end
            }
            phx-value-position={position}
            class={
              "position-dot #{if @selected_piece && (@phase == :flying or BoardCoordinates.adjacent_positions?(@selected_piece, position)),
                do: "adjacent", else: ""}"
            }
          />
        <% end %>

        <%= for {{x, y}, player} <- @placed_pieces do %>
          <% position = BoardCoordinates.get_position(x, y) %>
          <circle
            cx={x}
            cy={y}
            r="10"
            fill={player_color(player)}
            class={
              "game-piece #{if @current_player == @player && player == @player && @phase in [:move, :flying],
                do: "selectable"} #{if position == @selected_piece, do: "selected"}"
            }
            phx-click={
              cond do
                @can_capture && player != @mill_forming_player -> "remove_piece"
                @phase in [:move, :flying] && player == @player -> "select_piece"
                true -> nil
              end
            }
            phx-value-position={position}
          />
        <% end %>
      </svg>
    </div>

    <div class="game-info">
      <p>
        Current Phase:
        <span class="phase-indicator">
          <%= case @phase do %>
            <% :placement -> %>
              Placement
            <% :move -> %>
              Move
            <% :flying -> %>
              Flying
          <% end %>
        </span>
      </p>
      <p>Pieces Remaining:</p>
      <ul>
        <li>White: {@board.pieces.white}</li>
        <li>Black: {@board.pieces.black}</li>
      </ul>
      <%= if @winner do %>
        <p class="winner-message">Winner: {@winner}</p>
      <% end %>
    </div>
  <% end %>
<% end %>
